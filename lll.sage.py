

# This file was *autogenerated* from the file dox/crypto/lll.sage
from sage.all_cmdline import *   # import sage library

_sage_const_3 = Integer(3); _sage_const_529774210762246675161318616746995617835565246251635147 = Integer(529774210762246675161318616746995617835565246251635147); _sage_const_221742016667880335235086977604419933217657946219108301 = Integer(221742016667880335235086977604419933217657946219108301); _sage_const_35 = Integer(35); _sage_const_2 = Integer(2); _sage_const_0 = Integer(0); _sage_const_1 = Integer(1)#!/bin/sage

e = _sage_const_3 
N = _sage_const_529774210762246675161318616746995617835565246251635147 
c = _sage_const_221742016667880335235086977604419933217657946219108301 
a = Integer("myfavoritenumberis000000", base=_sage_const_35 )
X = Integer("xxxxxx", base=_sage_const_35 )


M = Matrix([
    [X**_sage_const_3 , _sage_const_3 *X**_sage_const_2 *a, _sage_const_3 *X*a**_sage_const_2 , a**_sage_const_3 -c],
    [_sage_const_0 , N*X**_sage_const_2 , _sage_const_0 , _sage_const_0 ],
    [_sage_const_0 , _sage_const_0 , N*X, _sage_const_0 ],
    [_sage_const_0 ,_sage_const_0 ,_sage_const_0 , N]
])

#print(M.LLL())
B = M.LLL()
Q1 = (B[_sage_const_0 ][_sage_const_0 ]*(x**_sage_const_3 /X**_sage_const_3 ))
Q2 = B[_sage_const_0 ][_sage_const_1 ]*(x**_sage_const_2 /X**_sage_const_2 )
Q3 = B[_sage_const_0 ][_sage_const_2 ]*(x/X)
Q4 = B[_sage_const_0 ][_sage_const_3 ]

print(B)
print()
print(Q1)
print(Q2)
print(Q3)
print(Q4)
Q = Q1 + Q2 + Q3 + Q4
print(Q.roots(ring=ZZ))



